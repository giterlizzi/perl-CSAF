package CSAF::Type::Vulnerability;

use 5.010001;
use strict;
use warnings;

use Carp;

use CSAF::Type::Acknowledgments;
use CSAF::Type::CWE;
use CSAF::Type::IDs;
use CSAF::Type::Involvements;
use CSAF::Type::Notes;
use CSAF::Type::ProductStatus;
use CSAF::Type::References;
use CSAF::Type::Remediations;
use CSAF::Type::Scores;
use CSAF::Type::Threats;

use CSAF::Util qw(check_datetime get_weakness_name);

use Moo;
extends 'CSAF::Type::Base';


has [qw(
    flags
    title
)] => (is => 'rw');

has cve            => (is => 'rw', isa => sub { Carp::croak 'Malformed CVE ID' if ($_[0] !~ /^CVE-\d{4}-\d{4,7}$/) });
has discovery_date => (is => 'rw', coerce => \&check_datetime);
has release_date   => (is => 'rw', coerce => \&check_datetime);

sub cwe {
    my ($self, %params) = @_;
    $self->{cwe} ||= CSAF::Type::CWE->new(%params);
}

sub product_status {
    my ($self, %params) = @_;
    $self->{product_status} ||= CSAF::Type::ProductStatus->new(%params);
}

sub notes {
    my $self = shift;
    $self->{notes} ||= CSAF::Type::Notes->new(@_);
}

sub references {
    my $self = shift;
    $self->{references} ||= CSAF::Type::References->new(@_);
}

sub scores {
    my ($self, %params) = @_;
    $self->{scores} ||= CSAF::Type::Scores->new(%params);
}

sub acknowledgments {
    my $self = shift;
    $self->{acknowledgments} ||= CSAF::Type::Acknowledgments->new(@_);
}

sub remediations {
    my $self = shift;
    $self->{remediations} ||= CSAF::Type::Remediations->new(@_);
}

sub threats {
    my $self = shift;
    $self->{threats} ||= CSAF::Type::Threats->new(@_);
}

sub ids {
    my $self = shift;
    $self->{ids} ||= CSAF::Type::IDs->new(@_);
}

sub involvements {
    my $self = shift;
    $self->{involvements} ||= CSAF::Type::Involvements->new(@_);
}


sub TO_BUILD {

    my $self = shift;

    my $output = {};

    $output->{cve}   = $self->cve   if ($self->cve);
    $output->{title} = $self->title if ($self->title);

    $output->{discovery_date} = check_datetime($self->discovery_date) if ($self->discovery_date);
    $output->{release_date}   = check_datetime($self->release_date)   if ($self->release_date);

    if ($self->cwe->id) {
        $output->{cwe} = $self->cwe;
    }

    if (@{$self->acknowledgments->items}) {
        $output->{acknowledgments} = $self->acknowledgments;
    }

    if (@{$self->notes->items}) {
        $output->{notes} = $self->notes;
    }

    if (@{$self->scores->items}) {
        $output->{scores} = $self->scores;
    }

    if (@{$self->remediations->items}) {
        $output->{remediations} = $self->remediations;
    }

    if (@{$self->references->items}) {
        $output->{references} = $self->references;
    }

    if (@{$self->involvements->items}) {
        $output->{involvements} = $self->involvements;
    }

    if (my $product_status = $self->product_status->TO_BUILD) {
        $output->{product_status} = $product_status;
    }

    if (my $ids = $self->ids->TO_BUILD) {
        $output->{ids} = $ids if (@$ids);    # TODO
    }

    return $output;

}

1;
